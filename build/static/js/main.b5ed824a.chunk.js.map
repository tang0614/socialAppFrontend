{"version":3,"sources":["store/actions.js","Page/Auth/SignUp.jsx","Page/Auth/LogIn.jsx","Page/Auth/Auth.jsx","component/AuthorImage.jsx","component/deleteScream.jsx","component/Buttons.jsx","component/AvatarImage.jsx","component/ScreamCard.jsx","store/logService.js","store/httpService.js","store/helpers.js","component/comment.jsx","component/ScreamCardDetail.jsx","Page/Post/Scream.jsx","Page/Post/Screams.jsx","component/ProfileList.jsx","component/PostCard.jsx","Page/Home/Home.jsx","Page/NotFound.jsx","component/common/protectedRoute.jsx","component/ProfileHeader.jsx","component/EditProfile.jsx","component/ProfileCard.jsx","component/EditImage.jsx","Page/Profile/MyTweet.jsx","Page/Profile/MyLike.jsx","Page/Profile/MyComment.jsx","Page/Profile/Profile.jsx","store/reducers/userReducer.js","store/reducers/dataReducer.js","store/store.js","store/middleware/postapi.js","store/middleware/getapi.js","store/middleware/putapi.js","store/middleware/postDetailApi.js","App.js","theme.js","index.js"],"names":["apiCallBegan","createAction","apiCallSuccess","apiCallFailed","logoutUser","apiGetUserBegan","apiGetUserSuccess","apiGetUserFailed","apiPutUserBegan","apiPutUserSuccess","apiPutUserFailed","apiGetScreamBegan","apiGetScreamSuccess","apiGetScreamFailed","apiGetOneScreamBegan","apiGetOneScreamSuccess","apiGetOneScreamFailed","apiPostScreamBegan","apiPostScreamSuccess","apiPostScreamFailed","apiDeleteBegan","apiDeleteSuccess","apiDeleteFailed","apiUncommentBegan","apiUncommentSuccess","apiUncommentFailed","apiPostCommentBegan","apiPostCommentSuccess","apiPostCommentFailed","apiPutCommentBegan","apiPutCommentSuccess","apiPutCommentFailed","apiPutRetweetBegan","apiPutRetweetSuccess","apiPutRetweetFailed","apiPutLikeBegan","apiPutLikeSuccess","apiPutLikeFailed","apiPutUnLikeBegan","apiPutUnLikeSuccess","apiPutUnLikeFailed","apiPutFollowBegan","apiPutFollowSuccess","apiPutFollowFailed","apiPutUnFollowBegan","apiPutUnFollowSuccess","apiPutUnFollowFailed","useStyles","makeStyles","theme","errorMessage","fontSize","color","textAlign","connect","state","loading","user","errors","dispatch","signup","url","userData","history","props","classes","open","handleClose","useState","handle","setHandle","email","setEmail","password","setPassword","repeat_password","setrepeat_password","handleError","setHandleError","emailError","setEmailError","passwordError","setPasswordError","repeat_passwordError","setrepeat_passwordError","disabled","setDisabled","handleChange","event","name","target","message","value","length","match","validHandler","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","type","label","onChange","helperText","error","fullWidth","Typography","variant","className","DialogActions","Button","onClick","preventDefault","handleServer","console","log","CircularProgress","size","login","root","display","flexDirection","justifyContent","alignItems","backgroundImage","backgroundSize","backgroundRepeat","twitterIcon","title","fontWeight","note","wrapper","width","buttonSignUp","padding","margin","borderRadius","backgroundColor","buttonLogIn","imageContainer","height","image","Auth","React","openSignUp","setOpenSignUp","openLogIn","setOpenLogIn","CssBaseline","Grid","container","item","xs","sm","IconButton","direction","justify","Hidden","xsDown","ButtonBase","spacing","large","border","editImage","AuthorImage","imageUrl","process","window","location","origin","Avatar","alt","src","screams","data","delete","uncomment","withRouter","handleOpen","scream","Tooltip","maxWidth","ids","_id","commentOn","source","comment_id","commented_id","findCommentOn","forEach","element","push","retweetOn","setTimeout","buttons","cursor","liked","unliked","likePost","setLikePost","useEffect","re","like","filter","handleClickOpen","openDelete","handleDeleteOpen","handleDeleteClose","retweet","unLike","body","startsWith","comments","retweets","unLiked","author","small","update_error","isTweet","boxShadow","notes","header","headerItem","content","icon","bodyScream","createdAt","author_details","isComment","isNested","dayjs","extend","relativeTime","scream_id","split","commentedScream","find","isRetweet","paperInHeader","component","Link","to","Card","fromNow","axios","defaults","baseURL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","setJwt","jwt","headers","common","deleteJwt","setAuthorizationHeader","token","localStorage","setItem","Date","getTime","http","removeAuthorizationHeader","removeItem","getCurrentUser","getItem","jwtDecode","ex","setCommentHeader","removeCommentHeader","getComment","cancelIcon","position","right","top","fetch_loading","fetch_errors","postComment","putCommentDetail","setBody","multiline","rows","defaultValue","err","alert","retweet_buttons","fullScreenScreamCard","follow","post_loading","getScream","handleCloseFull","getScreamDetail","index","comments_details","map","comment","s","key","AppBar","appBar","Toolbar","edge","aria-label","borderBottom","marginTop","add","Transition","forwardRef","ref","Slide","putRetweetDetail","putLikePost","putUnLikePost","putFollow","putUnFollow","setOpen","open_full","setOpen_full","setOpenDelete","setFollow","following","retweet_id","retweeted_id","screamCard","retweet_card","fullScreen_button","fullScreen","TransitionComponent","borderLeft","totalRetweet","totalComment","getPosts","paper","inline","paddingTop","fetching_errors","logout","followedBy","List","ListItem","ListItemAvatar","ListItemText","secondary","Fragment","button","ListItemIcon","primary","post_errors","postScream","background","menuButton","marginRight","grid","list","fullList","addIcon","bottom","menuIcon","delete_loading","anchor","left","setState","toggleDrawer","Drawer","clsx","role","onKeyDown","Fab","NotFound","Component","ProtectedRoute","path","render","rest","currentUser","pathname","from","flexGrow","backIcon","ProfileHeader","update","bio","setBio","setLocation","website","setWebsite","bioError","setBioError","locationError","setLocationError","websiteError","setWebsiteError","media","profileInfo","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","popover","pointerEvents","anchorEl","setAnchorEl","openPop","Boolean","handlePopoverClose","hidden","formData","FormData","append","files","tip","document","getElementById","click","btnClassName","aria-owns","undefined","aria-haspopup","onMouseEnter","currentTarget","onMouseLeave","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","likes","includes","Profile","MyTweet","MyComment","MyLike","initialState","authenticated","image_loading","post_error","unComment_error","middleware","thunk","getState","next","action","actions","payload","then","res","catch","reducers","combineReducers","replace","updated","likeCount","i","findIndex","splice","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","App","now","checkExpiration","exact","Home","createMuiTheme","typography","textTransform","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.b5ed824a.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n//login and signup and post request\nexport const apiCallBegan = createAction(\"apiCallBegan\");\nexport const apiCallSuccess = createAction(\"apiCallSuccess\");\nexport const apiCallFailed = createAction(\"apiCallFailed\");\nexport const logoutUser = createAction(\"logoutUser\");\n\n//user get user request\nexport const apiGetUserBegan = createAction(\"apiGetUserBegan \");\nexport const apiGetUserSuccess = createAction(\"apiGetUserSuccess\");\nexport const apiGetUserFailed = createAction(\"apiGetUserFailed\");\n\n//user put request\nexport const apiPutUserBegan = createAction(\"apiPutUserBegan \");\nexport const apiPutUserSuccess = createAction(\"apiPutUserSuccess\");\nexport const apiPutUserFailed = createAction(\"apiPutUserFailed\");\n\n//request  screams\nexport const apiGetScreamBegan = createAction(\"apiGetScreamBegan\");\nexport const apiGetScreamSuccess = createAction(\"apiGetScreamSuccess\");\nexport const apiGetScreamFailed = createAction(\"apiGetScreamFailed\");\n\n//request one scream\nexport const apiGetOneScreamBegan = createAction(\"apiGetOneScreamBegan\");\nexport const apiGetOneScreamSuccess = createAction(\"apiGetOneScreamSuccess\");\nexport const apiGetOneScreamFailed = createAction(\"apiGetOneScreamFailed\");\n\nexport const apiLikeScreamBegan = createAction(\"apiLikeScreamBegan\");\nexport const apiLikeScreamSuccess = createAction(\"apiLikeScreamSuccess \");\nexport const apiLikeScreamFailed = createAction(\"apiLikeScreamFailed\");\n\nexport const apiUnLikeScreamBegan = createAction(\"apiUnLikeScreamBegan\");\nexport const apiUnLikeScreamSuccess = createAction(\"apiUnLikeScreamSuccess \");\nexport const apiUnLikeScreamFailed = createAction(\"apiUnLikeScreamFailed\");\n\n//scream post request\nexport const apiPostScreamBegan = createAction(\"apiPostScreamBegan\");\nexport const apiPostScreamSuccess = createAction(\"apiPostScreamSuccess\");\nexport const apiPostScreamFailed = createAction(\"apiPostScreamFailed\");\n\n//scream delete request\nexport const apiDeleteBegan = createAction(\"apiDeleteBegan\");\nexport const apiDeleteSuccess = createAction(\"apiDeleteSuccess\");\nexport const apiDeleteFailed = createAction(\"apiDeleteFailed\");\n\n//uncomment from comments\nexport const apiUncommentBegan = createAction(\"apiUncommentBegan\");\nexport const apiUncommentSuccess = createAction(\"apiUncommentSuccess\");\nexport const apiUncommentFailed = createAction(\"apiUncommentFailed\");\n\n//scream comment request\nexport const apiPostCommentBegan = createAction(\"apiPostCommentBegan\");\nexport const apiPostCommentSuccess = createAction(\"apiPostCommentSuccess\");\nexport const apiPostCommentFailed = createAction(\"apiPostCommentFailed\");\n\n//put comment detail\nexport const apiPutCommentBegan = createAction(\"apiPutCommentBegan\");\nexport const apiPutCommentSuccess = createAction(\"apiPutCommentSuccess\");\nexport const apiPutCommentFailed = createAction(\"apiPutCommentFailed\");\n\n//put retweet detail\nexport const apiPutRetweetBegan = createAction(\"apiPutRetweetBegan\");\nexport const apiPutRetweetSuccess = createAction(\"apiPutRetweetSuccess\");\nexport const apiPutRetweetFailed = createAction(\"apiPutRetweetFailed\");\n\n//like a post\nexport const apiPutLikeBegan = createAction(\"apiPutLikeBegan\");\nexport const apiPutLikeSuccess = createAction(\"apiPutLikeSuccess\");\nexport const apiPutLikeFailed = createAction(\"apiPutLikeFailed\");\n\n//unlike a post\nexport const apiPutUnLikeBegan = createAction(\"apiPutUnLikeBegan\");\nexport const apiPutUnLikeSuccess = createAction(\"apiPutUnLikeSuccess\");\nexport const apiPutUnLikeFailed = createAction(\"apiPutUnLikeFailed\");\n\n//follow\n\nexport const apiPutFollowBegan = createAction(\"apiPutFollowBegan\");\nexport const apiPutFollowSuccess = createAction(\"apiPutFollowSuccess\");\nexport const apiPutFollowFailed = createAction(\"apiPutFollowFailed\");\n\n//unfollow\n\nexport const apiPutUnFollowBegan = createAction(\"apiPutUnFollowBegan\");\nexport const apiPutUnFollowSuccess = createAction(\"apiPutUnFollowSuccess\");\nexport const apiPutUnFollowFailed = createAction(\"apiPutUnFollowFailed\");\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// MUI Stuff\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n//redux\nimport { connect } from \"react-redux\";\nimport { apiCallBegan } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    fontSize: \"0.8rem\",\n    color: \"red\",\n    textAlign: \"center\",\n  },\n}));\n\nconst SignUp = (props) => {\n  const classes = useStyles(props);\n  const { open, handleClose } = props;\n  const [handle, setHandle] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeat_password, setrepeat_password] = useState(\"\");\n\n  const [handleError, setHandleError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [repeat_passwordError, setrepeat_passwordError] = useState(\"\");\n\n  const [disabled, setDisabled] = useState(false);\n\n  const handleServer = () => {\n    const userData = {\n      email,\n      password,\n      repeat_password,\n      handle,\n    };\n    props.signup(\"./api/users\", userData, props.history);\n  };\n  const handleSignUpSubmit = (event) => {\n    event.preventDefault();\n    handleServer();\n    console.log(\"handling server..\");\n  };\n\n  const validHandler = (value, name) => {\n    if (name === \"email\") {\n      const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n      if (!value.match(regEx)) {\n        return \"Please enter correct format\";\n      }\n    } else if (name === \"repeat_password\") {\n      return value !== password ? \"password must be same\" : \"\";\n    } else {\n      return value.length >= 6 ? \"\" : \"length should be longer than 6\";\n    }\n  };\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const message = validHandler(event.target.value, event.target.name);\n\n    if (name === \"handle\") {\n      setHandle(event.target.value);\n      setHandleError(message);\n    } else if (name === \"password\") {\n      setPassword(event.target.value);\n      setPasswordError(message);\n    } else if (name === \"email\") {\n      setEmail(event.target.value);\n      setEmailError(message);\n    } else {\n      setrepeat_password(event.target.value);\n      setrepeat_passwordError(message);\n    }\n\n    if (!message) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Create your account</DialogTitle>\n      <DialogContent>\n        <TextField\n          id=\"handle\"\n          name=\"handle\"\n          type=\"handle\"\n          label=\"User Name\"\n          value={handle}\n          onChange={handleChange}\n          helperText={handleError}\n          error={handleError ? true : false}\n          fullWidth\n        />\n\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={handleChange}\n          helperText={emailError}\n          error={emailError ? true : false}\n          fullWidth\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={handleChange}\n          helperText={passwordError}\n          error={passwordError ? true : false}\n          fullWidth\n        />\n        <TextField\n          id=\"repeat_password\"\n          name=\"repeat_password\"\n          type=\"password\"\n          label=\"Confirm password\"\n          value={repeat_password}\n          onChange={handleChange}\n          helperText={repeat_passwordError}\n          error={repeat_passwordError ? true : false}\n          fullWidth\n        />\n      </DialogContent>\n      {props.errors && (\n        <Typography variant=\"body2\" className={classes.errorMessage}>\n          {props.errors}\n        </Typography>\n      )}\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSignUpSubmit}\n          color=\"primary\"\n          disabled={disabled}\n        >\n          Sign Up\n          {props.loading && <CircularProgress size={10} />}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nSignUp.propTypes = {\n  signup: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  errors: PropTypes.string.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  loading: state.user.loading,\n  errors: state.user.errors,\n});\n\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    signup: (url, userData, history) =>\n      dispatch(apiCallBegan({ userData, url, history })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(SignUp);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// MUI Stuff\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n//redux\nimport { connect } from \"react-redux\";\nimport { apiCallBegan } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    fontSize: \"0.8rem\",\n    color: \"red\",\n    textAlign: \"center\",\n  },\n}));\n\nconst LogIn = (props) => {\n  const classes = useStyles(props);\n  const { open, handleClose } = props;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const [disabled, setDisabled] = useState(false);\n\n  const handleServer = () => {\n    const userData = {\n      email,\n      password,\n    };\n    props.login(\"./api/auth\", userData, props.history);\n  };\n  const handleLogInSubmit = (event) => {\n    event.preventDefault();\n    handleServer();\n    console.log(\"handling server..\");\n  };\n\n  const validHandler = (value, name) => {\n    if (name === \"email\") {\n      const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n      if (!value.match(regEx)) {\n        return \"Please enter correct format\";\n      }\n    } else {\n      return value.length >= 6 ? \"\" : \"length should be longer than 6\";\n    }\n  };\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const message = validHandler(event.target.value, event.target.name);\n\n    if (name === \"password\") {\n      setPassword(event.target.value);\n      setPasswordError(message);\n    } else if (name === \"email\") {\n      setEmail(event.target.value);\n      setEmailError(message);\n    }\n\n    if (!message) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Log in to Twitter</DialogTitle>\n      <DialogContent>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={handleChange}\n          helperText={emailError}\n          error={emailError ? true : false}\n          fullWidth\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={handleChange}\n          helperText={passwordError}\n          error={passwordError ? true : false}\n          fullWidth\n        />\n      </DialogContent>\n      {props.errors && (\n        <Typography variant=\"body2\" className={classes.errorMessage}>\n          {props.errors}\n        </Typography>\n      )}\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleLogInSubmit} color=\"primary\" disabled={disabled}>\n          Log In\n          {props.loading && <CircularProgress size={10} />}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nLogIn.propTypes = {\n  login: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  errors: PropTypes.string.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  loading: state.user.loading,\n  errors: state.user.errors,\n});\n\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    login: (url, userData, history) =>\n      dispatch(apiCallBegan({ userData, url, history })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(LogIn);\n","import React from \"react\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, CssBaseline } from \"@material-ui/core\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport SignUp from \"./SignUp\";\nimport LogIn from \"./LogIn\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n\n    backgroundImage: `url(/image/background.png)`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  },\n\n  twitterIcon: {\n    color: \"white\",\n    fontSize: \"4rem\",\n  },\n\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"500\",\n    textAlign: \"start\",\n    color: \"white\",\n  },\n\n  note: {\n    fontSize: \"1rem\",\n    textAlign: \"start\",\n    fontWeight: \"500\",\n    color: \"white\",\n  },\n\n  wrapper: {\n    width: \"90%\",\n  },\n\n  buttonSignUp: {\n    width: \"10rem\",\n    padding: \"0.5rem 2rem\",\n    margin: \"1em 0\",\n    borderRadius: \"20%\",\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n  buttonLogIn: {\n    width: \"10rem\",\n    padding: \"0.5rem 2rem\",\n    margin: \"1em 0\",\n    borderRadius: \"20%\",\n    backgroundColor: \"#33C0FF\",\n  },\n\n  imageContainer: {\n    width: \"100%\",\n    height: \"100vh\",\n  },\n\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundImage: `url(/image/twitterLogo.jpg)`,\n    backgroundRepeat: \"repeat\",\n  },\n}));\n\nconst Auth = (props) => {\n  const classes = useStyles(props);\n  const [openSignUp, setOpenSignUp] = React.useState(false);\n  const [openLogIn, setOpenLogIn] = React.useState(false);\n\n  const handleSignUpClickOpen = () => {\n    setOpenSignUp(true);\n  };\n\n  const handleSignUpClose = () => {\n    setOpenSignUp(false);\n  };\n\n  const handleLogInClickOpen = () => {\n    setOpenLogIn(true);\n  };\n\n  const handleLogInClose = () => {\n    setOpenLogIn(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container>\n        <Grid item xs={12} sm={6} container>\n          <IconButton>\n            <TwitterIcon className={classes.twitterIcon} />\n          </IconButton>\n\n          <Grid item xs={12}>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={12} sm={6} className={classes.wrapper}>\n                <p className={classes.title}>\n                  See what's happening in the world right now\n                </p>\n                <p className={classes.note}>Join twitter today.</p>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.buttonSignUp}\n                  onClick={handleSignUpClickOpen}\n                >\n                  Sign up\n                </Button>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"black\"\n                  className={classes.buttonLogIn}\n                  onClick={handleLogInClickOpen}\n                >\n                  Log in\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item sm={6} className={classes.imageContainer}>\n          <Hidden xsDown>\n            <ButtonBase className={classes.image}></ButtonBase>\n          </Hidden>\n        </Grid>\n      </Grid>\n\n      <SignUp open={openSignUp} handleClose={handleSignUpClose} {...props} />\n\n      <LogIn open={openLogIn} handleClose={handleLogInClose} {...props} />\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexDirection: \"row\",\n  },\n\n  large: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    border: \"1px solid black\",\n  },\n\n  editImage: {\n    width: \"5px\",\n    padding: 0,\n    margin: 0,\n  },\n}));\n\nconst AuthorImage = (props) => {\n  const classes = useStyles();\n\n  const url = props.imageUrl\n    ? process.env.REACT_APP_API_URL + \"/\" + props.imageUrl\n    : window.location.origin + \"/image/icon.png\";\n\n  return (\n    <div className={classes.root}>\n      <Avatar alt=\"avatar\" src={url} className={classes.large} />\n    </div>\n  );\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default AuthorImage;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n// MUI Stuff\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// REdux\nimport { connect } from \"react-redux\";\nimport { apiDeleteBegan, apiUncommentBegan } from \"../store/actions\";\nimport { TagFacesTwoTone } from \"@material-ui/icons\";\n\nconst DeleteScream = (props) => {\n  const { handleOpen, handleClose, open, scream } = props;\n\n  function findCommentOn(target, ids) {\n    props.screams.forEach((element) => {\n      if (element.commentOn && element.commentOn === target._id) {\n        ids.push(element._id);\n        findCommentOn(element, ids);\n      } else if (element.retweetOn && element.retweetOn === target._id) {\n        ids.push(element._id);\n        findCommentOn(element, ids);\n      } else if (!element.commentOn) {\n        return;\n      }\n    });\n    return ids;\n  }\n  const deleteScream = () => {\n    console.log(\"deleting scream\");\n\n    let ids = [scream._id];\n\n    if (scream.commentOn) {\n      const source = {\n        comment_id: scream._id,\n        commented_id: scream.commentOn,\n      };\n      props.uncomment(`./api/screams/uncomment`, source);\n    }\n\n    ids = findCommentOn(scream, ids);\n    console.log(\"ids is\", ids);\n    const data = { ids };\n    setTimeout(() => {\n      props.delete(`./api/screams/delete`, data, props.history);\n    }, 1000);\n\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Tooltip onClick={handleOpen} title={\"delete\"}>\n        <DeleteOutline />\n      </Tooltip>\n\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Are you sure you want to delete this tweet ?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={deleteScream} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nDeleteScream.propTypes = {\n  delete: PropTypes.func.isRequired,\n  uncomment: PropTypes.func.isRequired,\n  screams: PropTypes.string.isRequired,\n};\n\n//connect subscribe/unsubscribe the redux store\nconst mapStateToProps = (state) => ({\n  screams: state.data.screams,\n});\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    delete: (url, data, history) =>\n      dispatch(apiDeleteBegan({ url, data, history })),\n    uncomment: (url, userData) =>\n      dispatch(apiUncommentBegan({ url, userData })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withRouter(DeleteScream));\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteScream from \"./deleteScream\";\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport RoundedCornerIcon from \"@material-ui/icons/RoundedCorner\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  disabled: {\n    color: \"#cccccc\",\n    cursor: \"none\",\n  },\n  liked: {\n    color: \"#1DA1F2\",\n  },\n  unliked: {},\n}));\n\nconst Buttons = (props) => {\n  const classes = useStyles(props);\n  const [likePost, setLikePost] = useState(\"\");\n\n  useEffect(() => {\n    const re = props.user.like\n      ? props.user.like.filter((element) => {\n          return element._id === scream._id;\n        })\n      : \"\";\n    setLikePost(re.length > 0);\n  }, [props.user.like]);\n\n  const {\n    scream,\n    handleClickOpen,\n    openDelete,\n    handleDeleteOpen,\n    handleDeleteClose,\n    retweet,\n    like,\n    unLike,\n  } = props;\n\n  const handleLikePost = () => {\n    console.log(\"handleLikePost\");\n\n    if (likePost) {\n      unLike(scream._id);\n      setLikePost(false);\n    } else {\n      like(scream._id);\n      setLikePost(true);\n    }\n    //here like post is false because setLikePost is async call\n  };\n\n  const buttons = scream.body.startsWith(\"retweet\") ? (\n    \"\"\n  ) : (\n    <div className={classes.buttons}>\n      <Tooltip onClick={handleClickOpen} title={\"comment\"}>\n        <Button>\n          {scream.comments.length}\n          <ChatBubbleOutlineIcon />\n        </Button>\n      </Tooltip>\n\n      <Tooltip onClick={retweet} title={\"retweet\"}>\n        <Button>\n          {scream.retweets.length}\n          <RoundedCornerIcon />\n        </Button>\n      </Tooltip>\n\n      <Tooltip onClick={handleLikePost} title={\"retweet\"}>\n        <Button className={likePost ? classes.liked : classes.unLiked}>\n          <FavoriteBorderIcon />\n        </Button>\n      </Tooltip>\n\n      {scream.author === props.user._id ? (\n        <DeleteScream\n          scream={scream}\n          handleOpen={handleDeleteOpen}\n          handleClose={handleDeleteClose}\n          open={openDelete}\n        />\n      ) : (\n        <Tooltip title={\"delete disabled\"} className={classes.disabled}>\n          <DeleteOutline disabled />\n        </Tooltip>\n      )}\n    </div>\n  );\n  return <div>{buttons}</div>;\n};\n\nButtons.propTypes = {\n  scream: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps)(Buttons);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n//redux\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexDirection: \"row\",\n  },\n\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    border: \"2px solid black\",\n  },\n\n  small: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    border: \"1px solid black\",\n  },\n\n  editImage: {\n    width: \"5px\",\n    padding: 0,\n    margin: 0,\n  },\n}));\n\nconst AvatarImage = (props) => {\n  const classes = useStyles();\n\n  let image;\n  if (!props.user) {\n    image = <CircularProgress />;\n  } else {\n    image = !props.error ? (\n      <Avatar\n        alt=\"avatar\"\n        src={process.env.REACT_APP_API_URL + \"/\" + props.user.imageUrl}\n        className={props.isTweet ? classes.small : classes.large}\n      />\n    ) : (\n      <Avatar\n        alt=\"avatar\"\n        src={window.location.origin + \"/image/icon.png\"}\n        className={props.isTweet ? classes.small : classes.large}\n      />\n    );\n  }\n\n  return <div className={classes.root}>{image}</div>;\n};\n\nAvatarImage.propTypes = {\n  user: PropTypes.string.isRequired,\n\n  error: PropTypes.string.isRequired,\n  isTweet: PropTypes.bool.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n\n  error: state.user.update_error,\n});\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps)(AvatarImage);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AuthorImage from \"./AuthorImage\";\nimport Scream from \"../Page/Post/Scream\";\nimport Buttons from \"./Buttons\";\n// MUI Stuff\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport MuiLink from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport RoundedCornerIcon from \"@material-ui/icons/RoundedCorner\";\nimport ChatBubbleOutlineSharpIcon from \"@material-ui/icons/ChatBubbleOutlineSharp\";\nimport AvatarImage from \"./AvatarImage\";\n// Redux\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: \"none\",\n    width: \"250px\",\n    margin: \"0 auto\",\n  },\n  notes: {\n    textAlign: \"start\",\n  },\n\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n\n  headerItem: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n\n  content: {\n    width: \"250px\",\n    textAlign: \"start\",\n    padding: \"1rem 0 \",\n  },\n  icon: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ScreamCard = (props) => {\n  const classes = useStyles(props);\n\n  const { createdAt, _id, body, author_details, author } = props.scream;\n\n  const {\n    isComment,\n    isNested,\n\n    scream,\n    handleClickOpen,\n    openDelete,\n    handleDeleteOpen,\n    handleDeleteClose,\n    retweet,\n  } = props;\n\n  dayjs.extend(relativeTime);\n  let bodyScream;\n  if (body.startsWith(\"retweet\")) {\n    const scream_id = body.split(\"retweet\")[1];\n\n    const commentedScream = props.screams.find(\n      (scream) => scream._id === scream_id\n    );\n\n    bodyScream = <Scream scream={commentedScream} isRetweet={true} />;\n  } else {\n    bodyScream = <Typography variant=\"body2\">{body}</Typography>;\n  }\n\n  const paperInHeader =\n    author === props.user._id ? (\n      <div className={classes.headerItem}>\n        <AvatarImage isTweet={true} />\n\n        <MuiLink component={Link} to={`/profile`} color=\"textPrimary\">\n          @{props.user.handle}\n        </MuiLink>\n      </div>\n    ) : (\n      <div className={classes.headerItem}>\n        <AuthorImage imageUrl={author_details[0].imageUrl} />\n\n        <MuiLink component={Link} to={`/profile`} color=\"textPrimary\">\n          @{author_details[0].handle}\n        </MuiLink>\n      </div>\n    );\n\n  const header = body.startsWith(\"retweet\") ? \"\" : paperInHeader;\n  return (\n    <Card className={classes.root}>\n      <div className={classes.notes}>\n        {isComment ? (\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            className={classes.icon}\n          >\n            <ChatBubbleOutlineSharpIcon />\n            {props.user.handle + \" replying\"}\n          </Typography>\n        ) : (\n          \"\"\n        )}\n\n        {body.startsWith(\"retweet\") ? (\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            className={classes.icon}\n          >\n            <RoundedCornerIcon />\n            {props.user.handle + \" retweet\"}\n          </Typography>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className={classes.header}>\n        {header}\n\n        <div>\n          <Typography\n            variant=\"caption\"\n            color=\"textSecondary\"\n            className={classes.headerItem}\n          >\n            {dayjs(createdAt).fromNow()}\n          </Typography>\n        </div>\n      </div>\n\n      <div className={classes.content}>{bodyScream}</div>\n      {isNested ? (\n        <Buttons\n          scream={scream}\n          handleClickOpen={handleClickOpen}\n          openDelete={openDelete}\n          handleDeleteOpen={handleDeleteOpen}\n          handleDeleteClose={handleDeleteClose}\n          retweet={retweet}\n        />\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nScreamCard.propTypes = {\n  user: PropTypes.string.isRequired,\n  screams: PropTypes.string.isRequired,\n};\n\n//connect subscribe/unsubscribe the redux store\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  screams: state.data.screams,\n});\n\nexport default connect(mapStateToProps)(ScreamCard);\n","function log(error) {\n  console.log(error);\n}\n\nexport default {\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport function setJwt(jwt) {\n  // put a header to all http requests from the client to the server\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport function deleteJwt() {\n  // put a header to all http requests from the client to the server\n\n  delete axios.defaults.headers.common[\"x-auth-token\"];\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n  deleteJwt,\n};\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\n\nexport const setAuthorizationHeader = (token) => {\n  localStorage.setItem(\"IdToken\", token);\n\n  localStorage.setItem(\n    \"expirationDate\",\n    new Date(new Date().getTime() + 1000000000)\n  );\n\n  http.setJwt(token);\n};\n\nexport const removeAuthorizationHeader = () => {\n  localStorage.removeItem(\"IdToken\");\n  localStorage.removeItem(\"expirationDate\");\n  http.deleteJwt();\n};\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"IdToken\");\n    const user = jwtDecode(jwt);\n\n    return user;\n  } catch (ex) {\n    console.log(\"no valid web token_key given\");\n  }\n}\n\nexport function checkExpiration() {\n  const token = localStorage.getItem(\"IdToken\");\n  if (token) {\n    const expirationDate = localStorage.getItem(\"expirationDate\");\n    if (expirationDate < Date.now()) {\n      console.log(\"token expired ....\");\n\n      return true;\n    }\n  }\n}\n\nexport const setCommentHeader = (_id) => {\n  localStorage.setItem(\"IdComment\", _id);\n  console.log(\"comment id set successfully\");\n};\n\nexport const removeCommentHeader = () => {\n  localStorage.removeItem(\"IdComment\");\n};\n\nexport function getComment() {\n  try {\n    return localStorage.getItem(\"IdComment\");\n  } catch (ex) {\n    console.log(\"no valid comment key given\");\n  }\n}\n","import React, { useState } from \"react\";\n//redux\nimport { connect } from \"react-redux\";\nimport { apiPostCommentBegan, apiPutCommentBegan } from \"../store/actions\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ScreamCard from \"./ScreamCard\";\nimport { getComment } from \"../store/helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  cancelIcon: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    padding: 0,\n    margin: 0,\n  },\n}));\n\nconst Comment = (props) => {\n  const classes = useStyles(props);\n  const { handleClose, open } = props;\n  const { _id } = props.scream;\n\n  const [body, setBody] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      body,\n    };\n\n    props.postComment(\"./api/screams\", userData);\n\n    try {\n      setTimeout(() => {\n        const comment_id = getComment();\n        const userData = {\n          comment_id: comment_id,\n          commented_id: _id,\n        };\n\n        props.putCommentDetail(`./api/screams/comment`, userData);\n      }, 1000);\n      setBody(\"\");\n    } catch (err) {\n      alert(\"internet error, fail to comment\");\n    }\n\n    handleClose();\n  };\n\n  const validHandler = (value) => {\n    if (value.length > 200 || value.length < 3)\n      return \"length should be smaller than 200 and smaller than 3 characters\";\n  };\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n    const message = validHandler(event.target.value);\n\n    if (!message) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth={\"100%\"}\n    >\n      <Button\n        className={classes.cancelIcon}\n        onClick={handleClose}\n        color=\"primary\"\n      >\n        <CloseIcon />\n      </Button>\n\n      <ScreamCard scream={props.scream} />\n\n      <DialogContent>\n        <TextField\n          id=\"tweet\"\n          multiline\n          rows={4}\n          defaultValue={body}\n          onChange={handleChange}\n          variant=\"outlined\"\n          fullWidth={\"100%\"}\n          label=\"Tweet your reply\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabled}\n        >\n          Tweet\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  comment_id: state.data.comment_id,\n  fetch_loading: state.user.fetch_loading,\n  fetch_errors: state.user.fetch_errors,\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    postComment: (url, userData) =>\n      dispatch(apiPostCommentBegan({ url, userData })),\n    putCommentDetail: (url, userData) =>\n      dispatch(apiPutCommentBegan({ url, userData })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(Comment);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ScreamCard from \"./ScreamCard\";\nimport Buttons from \"./Buttons\";\n\n//Material UI\nimport KeyboardBackspaceOutlinedIcon from \"@material-ui/icons/KeyboardBackspaceOutlined\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { apiGetOneScreamBegan } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  disabled: {\n    color: \"#cccccc\",\n    cursor: \"none\",\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n\n  retweet_buttons: {\n    width: 250,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  fullScreenScreamCard: {\n    margin: \"5rem 0\",\n  },\n  follow: {\n    position: \"absolute\",\n    top: \"5rem \",\n    right: \"2rem\",\n  },\n}));\n\nconst ScreamCardDetail = (props) => {\n  const classes = useStyles(props);\n  const {\n    handleCloseFull,\n    scream,\n    handleClickOpen,\n    openDelete,\n    handleDeleteOpen,\n    handleDeleteClose,\n    retweet,\n  } = props;\n\n  useEffect(() => {\n    console.log(\"scream detail using effect\");\n    getScreamDetail(scream._id);\n  }, [scream]);\n\n  const getScreamDetail = (index) => {\n    props.getScream(`/api/screams/${index}`);\n  };\n\n  let comments = props.post_loading ? (\n    <CircularProgress />\n  ) : props.post.comments_details ? (\n    props.post.comments_details.map((comment, id) => {\n      const re = props.screams.find((s) => s._id === comment._id);\n      return (\n        <ScreamCard\n          key={id}\n          scream={re}\n          isComment={true}\n          isNested={true}\n          handleClickOpen={handleClickOpen}\n          openDelete={openDelete}\n          handleDeleteOpen={handleDeleteOpen}\n          handleDeleteClose={handleDeleteClose}\n          retweet={retweet}\n        />\n      );\n    })\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleCloseFull}\n            aria-label=\"close\"\n          >\n            <KeyboardBackspaceOutlinedIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.fullScreenScreamCard}>\n        <ScreamCard scream={scream} />\n        <Buttons\n          scream={scream}\n          handleClickOpen={handleClickOpen}\n          openDelete={openDelete}\n          handleDeleteOpen={handleDeleteOpen}\n          handleDeleteClose={handleDeleteClose}\n          retweet={retweet}\n        />\n      </div>\n\n      {comments}\n    </div>\n  );\n};\n\nScreamCardDetail.propTypes = {\n  scream: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  getScream: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  post: state.data.post,\n  screams: state.data.screams,\n  post_loading: state.data.post_loading,\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    getScream: (url) => dispatch(apiGetOneScreamBegan({ url })),\n  };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ScreamCardDetail);\n","import React, { useState, useEffect } from \"react\";\nimport ScreamCard from \"../../component/ScreamCard\";\nimport PropTypes from \"prop-types\";\nimport Comment from \"../../component/comment\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { getComment } from \"../../store/helpers\";\nimport ScreamCardDetail from \"../../component/ScreamCardDetail\";\nimport Buttons from \"../../component/Buttons\";\n// MUI Stuff\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport EmojiNatureTwoToneIcon from \"@material-ui/icons/EmojiNatureTwoTone\";\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  apiPostCommentBegan,\n  apiPutRetweetBegan,\n  apiPutUnLikeBegan,\n  apiPutLikeBegan,\n  apiPutUnFollowBegan,\n  apiPutFollowBegan,\n} from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 512,\n    margin: \"0 auto\",\n    padding: 0,\n    boxShadow: \"none\",\n    borderBottom: \"1px dotted #cccccc\",\n  },\n\n  disabled: {\n    color: \"#cccccc\",\n    cursor: \"none\",\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n\n  retweet_buttons: {\n    width: 250,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  fullScreenScreamCard: {\n    marginTop: \"4rem\",\n  },\n  follow: {\n    color: \"#1DA1F2\",\n  },\n  add: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 0,\n    padding: 0,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Scream = (props) => {\n  const classes = useStyles(props);\n  dayjs.extend(relativeTime);\n  const scream = props.scream;\n  const [open, setOpen] = useState(false);\n  const [open_full, setOpen_full] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [follow, setFollow] = useState(\"\");\n\n  useEffect(() => {\n    const re = props.user.following\n      ? props.user.following.filter((element) => {\n          return element === scream.author;\n        })\n      : \"\";\n\n    setFollow(re.length > 0);\n  }, [props.user.following]);\n\n  const followHandler = () => {\n    if (follow) {\n      props.putUnFollow(`./api/users/unfollow/${scream.author}`);\n      setFollow(false);\n    } else {\n      props.putFollow(`./api/users/follow/${scream.author}`);\n      setFollow(true);\n    }\n  };\n\n  const handleDeleteOpen = () => {\n    setOpenDelete(true);\n  };\n  const handleDeleteClose = () => {\n    setOpenDelete(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseFull = () => {\n    setOpen_full(false);\n  };\n\n  const handleClickOpenFull = () => {\n    setOpen_full(true);\n  };\n\n  const retweet = () => {\n    console.log(\"retweeting\");\n    const userData = {\n      body: \"retweet\" + scream._id,\n    };\n    // props.postScream(\"./api/screams\", userData);\n    props.postComment(\"./api/screams\", userData);\n\n    try {\n      setTimeout(() => {\n        const retweet_id = getComment();\n\n        const userData = {\n          retweet_id: retweet_id,\n          retweeted_id: scream._id,\n        };\n\n        props.putRetweetDetail(`./api/screams/retweet`, userData);\n      }, 1000);\n    } catch (err) {\n      alert(\"internet error, fail to retweet\");\n    }\n  };\n\n  const like = (_id) => {\n    console.log(\"liking a post\");\n    props.putLikePost(`./api/users/like/${_id}`);\n  };\n\n  const unLike = (_id) => {\n    console.log(\"Unliking a post\");\n    props.putUnLikePost(`./api/users/unlike/${_id}`);\n  };\n\n  const screamCard = props.isRetweet ? (\n    <div className={classes.retweet_card}>\n      <ScreamCard\n        scream={scream}\n        isComment={props.isComment}\n        isRetweet={props.isRetweet}\n      />\n    </div>\n  ) : (\n    <Button className={classes.fullScreen_button} onClick={handleClickOpenFull}>\n      <ScreamCard\n        scream={scream}\n        isComment={props.isComment}\n        isRetweet={props.isRetweet}\n      />\n    </Button>\n  );\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <div className={classes.add}>\n          <Button>\n            <EmojiNatureTwoToneIcon />\n          </Button>\n          {scream.author === props.user._id ? (\n            \"\"\n          ) : (\n            <Tooltip\n              title={follow ? \"unfollow\" : \"follow\"}\n              className={follow ? classes.follow : \"\"}\n              onClick={followHandler}\n            >\n              <Button>\n                <GroupAddIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </div>\n        {screamCard}\n\n        <Buttons\n          scream={scream}\n          handleClickOpen={handleClickOpen}\n          openDelete={openDelete}\n          handleDeleteOpen={handleDeleteOpen}\n          handleDeleteClose={handleDeleteClose}\n          retweet={retweet}\n          like={like}\n          unLike={unLike}\n        />\n        <Comment\n          open={open}\n          handleClose={handleClose}\n          scream={scream}\n          {...props}\n        />\n      </Card>\n\n      <Dialog\n        fullScreen\n        open={open_full}\n        onClose={handleCloseFull}\n        TransitionComponent={Transition}\n      >\n        <ScreamCardDetail\n          handleCloseFull={handleCloseFull}\n          scream={scream}\n          handleClickOpen={handleClickOpen}\n          openDelete={openDelete}\n          handleDeleteOpen={handleDeleteOpen}\n          handleDeleteClose={handleDeleteClose}\n          retweet={retweet}\n        />\n      </Dialog>\n    </div>\n  );\n};\n\nScream.propTypes = {\n  scream: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  postComment: PropTypes.func.isRequired,\n  putRetweetDetail: PropTypes.func.isRequired,\n  putLikePost: PropTypes.func.isRequired,\n  putUnLikePost: PropTypes.func.isRequired,\n  putFollow: PropTypes.func.isRequired,\n  putUnFollow: PropTypes.func.isRequired,\n};\n\n//connect subscribe/unsubscribe the redux store\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    postComment: (url, userData, handle) =>\n      dispatch(apiPostCommentBegan({ url, userData, handle })),\n    putRetweetDetail: (url, userData) =>\n      dispatch(apiPutRetweetBegan({ url, userData })),\n    putLikePost: (url) => dispatch(apiPutLikeBegan({ url })),\n    putUnLikePost: (url) => dispatch(apiPutUnLikeBegan({ url })),\n    putFollow: (url) => dispatch(apiPutFollowBegan({ url })),\n    putUnFollow: (url) => dispatch(apiPutUnFollowBegan({ url })),\n  };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Scream);\n","import React, { useEffect, useState } from \"react\";\nimport Scream from \"./Scream\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// REdux\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { apiGetScreamBegan } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  screams: {\n    maxWidth: 512,\n    margin: \"0 auto\",\n    marginTop: \"2rem\",\n  },\n  wrapper: {\n    margin: \"1rem 0\",\n    borderLeft: \"3px solid #1DA1F2\",\n  },\n}));\n\nconst Screams = (props) => {\n  const classes = useStyles(props);\n\n  useEffect(() => {\n    props.getPosts(\"./api/screams\");\n  }, [props.totalRetweet, props.totalComment]);\n\n  const getScream = (scream, id) => {\n    console.log(\"getScream is \", scream);\n    if (scream.commentOn) {\n      const commented_id = scream.commentOn;\n\n      const commentedScream = props.screams.find(\n        (scream) => scream._id === commented_id\n      );\n\n      return (\n        <div className={classes.wrapper}>\n          {scream.body.startsWith(\"retweet\") ? (\n            <Scream key={id + \"Scream\"} scream={scream} isComment={false} />\n          ) : (\n            <div>\n              <Scream key={id + \"commentedScream\"} scream={commentedScream} />\n              <Scream\n                key={id + \"commentingScream\"}\n                scream={scream}\n                isComment={true}\n              />{\" \"}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      console.log(\"passing scream, not comment, not tweet is \", scream);\n      return <Scream key={id + \"scream\"} scream={scream} isComment={false} />;\n    }\n  };\n\n  let paper;\n  if (!props.screams) {\n    paper = <CircularProgress />;\n  } else {\n    paper = props.screams.map((scream, id) => getScream(scream, id));\n  }\n\n  return <div className={classes.screams}>{paper}</div>;\n};\n\nScreams.propTypes = {\n  screams: PropTypes.string.isRequired,\n  totalRetweet: PropTypes.number.isRequired,\n  totalComment: PropTypes.number.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  screams: state.data.screams, //cannot query state.data.screams-scream is object\n  totalRetweet: state.data.totalRetweet,\n  totalComment: state.data.totalComment,\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    getPosts: (url) => dispatch(apiGetScreamBegan({ url })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(Screams);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AvatarImage from \"./AvatarImage\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport ContactsOutlinedIcon from \"@material-ui/icons/ContactsOutlined\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  inline: {\n    display: \"inline\",\n    padding: \"0 1em\",\n    margin: \"0 auto\",\n  },\n  notes: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingTop: \"1em\",\n  },\n  note: {\n    padding: \" 0 1rem\",\n  },\n}));\n\nconst ProfileList = (props) => {\n  const classes = useStyles();\n  const { handle, following, followedBy, imageUrl } = props.user;\n\n  //logout current user\n  const handleLogout = () => {\n    props.logout();\n  };\n\n  //go to a new page\n  const handleProfile = () => {\n    props.history.push(`/profile/mytweet`);\n  };\n\n  return (\n    <List>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <AvatarImage imageUrl={imageUrl} isTweet={false} />\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n          >\n            @ {handle}\n          </Typography>\n        </ListItemAvatar>\n      </ListItem>\n\n      <ListItem>\n        <ListItemText\n          secondary={\n            <React.Fragment>\n              <Typography className={classes.notes}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"p\"\n                  className={classes.note}\n                >\n                  {following.length} Followings\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"p\"\n                  className={classes.note}\n                >\n                  {followedBy.length} Followers\n                </Typography>\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n\n      <ListItem button key={\"Profile\"} onClick={handleProfile}>\n        <ListItemIcon>\n          <ContactsOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Profile\"} />\n      </ListItem>\n\n      <ListItem button key={\"Logout\"} onClick={handleLogout}>\n        <ListItemIcon>\n          <ExitToAppOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Logout\"} />\n      </ListItem>\n\n      {props.errors && (\n        <Typography variant=\"body2\" className={classes.errorMessage}>\n          {props.errors}\n        </Typography>\n      )}\n    </List>\n  );\n};\n\nProfileList.propTypes = {\n  user: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  errors: state.user.fetching_errors,\n});\n\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logoutUser()),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileList);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { apiPostScreamBegan } from \"../store/actions\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  cancelIcon: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    padding: 0,\n    margin: 0,\n  },\n  errorMessage: {\n    fontSize: \"0.8rem\",\n    color: \"red\",\n    textAlign: \"center\",\n  },\n}));\n\nconst PostCard = (props) => {\n  const classes = useStyles(props);\n\n  //props to open and close current component/Dialog\n  const { handleClose, open } = props;\n\n  //state to control the content of tweet\n  const [body, setBody] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      body,\n    };\n    props.postScream(\"./api/screams\", userData, handleClose);\n    setBody(\"\");\n  };\n\n  const validHandler = (value) => {\n    if ((value.length > 200) | (value.length < 3))\n      return \"length should be smaller than 200 and greater than 3\";\n  };\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n    const message = validHandler(event.target.value);\n    if (!message) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth={\"100%\"}\n    >\n      <Button\n        className={classes.cancelIcon}\n        onClick={handleClose}\n        color=\"primary\"\n      >\n        <CloseIcon />\n      </Button>\n\n      <DialogTitle id=\"form-dialog-title\">What's happening ?</DialogTitle>\n      <DialogContent>\n        <TextField\n          id=\"tweet\"\n          multiline\n          rows={4}\n          defaultValue={body}\n          onChange={handleChange}\n          variant=\"outlined\"\n          fullWidth={\"100%\"}\n        />\n\n        {props.errors && (\n          <Typography variant=\"body2\" className={classes.errorMessage}>\n            {props.errors}\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabled}\n        >\n          Tweet\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nPostCard.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.data.post_errors,\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    postScream: (url, userData, handle) =>\n      dispatch(apiPostScreamBegan({ url, userData, handle })),\n  };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(PostCard);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Screams from \"../Post/Screams\";\nimport ProfileList from \"../../component/ProfileList\";\nimport AvatarImage from \"../../component/AvatarImage\";\nimport PostCard from \"../../component/PostCard\";\n\n//Material UI\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Fab from \"@material-ui/core/Fab\";\n// Redux\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#fff\",\n    margin: \"0 auto\",\n    width: \"100%\",\n  },\n  appBar: {\n    background: \"none\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: \"#1DA1F2\",\n    fontWeight: \"600\",\n  },\n  grid: {\n    paddingTop: \"1rem\",\n  },\n  list: {\n    backgroundColor: \"#fff\",\n    width: \"20rem\",\n    height: \"100vh\",\n    color: \"black\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  addIcon: {\n    position: \"fixed\",\n    color: \"#1DA1F2\",\n\n    bottom: \"3rem\",\n    right: \"3rem\",\n  },\n  menuIcon: {\n    color: \"#1DA1F2\",\n  },\n  imageContainer: {\n    width: \"100%\",\n  },\n\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundImage: `url(/image/twitterLogo.jpg)`,\n    backgroundRepeat: \"repeat\",\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles(props);\n\n  //open for toggleDrawer\n  const [state, setState] = React.useState({\n    left: false,\n  });\n  //open for new post\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //toggleDrawer\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <ProfileList {...props} />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Button\n            onClick={toggleDrawer(\"left\", true)}\n            className={classes.menuIcon}\n          >\n            <AvatarImage isTweet={false} />\n          </Button>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Home\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        anchor={\"left\"}\n        open={state[\"left\"]}\n        onClose={toggleDrawer(\"left\", false)}\n      >\n        {list(\"left\")}\n      </Drawer>\n\n      <Grid container>\n        <Grid item xs={12} sm={6} container>\n          <Screams />\n        </Grid>\n        <Grid item sm={6} className={classes.imageContainer}>\n          <Hidden xsDown>\n            <ButtonBase className={classes.image}></ButtonBase>\n          </Hidden>\n        </Grid>\n      </Grid>\n\n      <Fab\n        color=\"primary\"\n        size=\"medium\"\n        className={classes.addIcon}\n        onClick={handleOpen}\n      >\n        <AddCircleOutlineIcon fontSize=\"large\" />\n      </Fab>\n\n      <PostCard open={open} handleClose={handleClose} {...props} />\n    </div>\n  );\n};\n\nHome.propTypes = {\n  delete_loading: PropTypes.bool.isRequired,\n};\n\n//connect subscribe/unsubscribe the redux store\nconst mapStateToProps = (state) => ({\n  delete_loading: state.data.delete_loading,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nclass NotFound extends Component {\n  state = {};\n  render() {\n    return <h1>NotFound</h1>;\n  }\n}\n\nexport default NotFound;\n","import * as React from \"react\";\nimport { getCurrentUser } from \"../../store/helpers\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ path, component: Component, render, ...rest }) {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={(props) => {\n        if (!getCurrentUser())\n          return (\n            <Redirect\n              to={{ pathname: \"/auth\", state: { from: props.location } }}\n            />\n          );\n        return Component ? (\n          <Component currentUser={getCurrentUser()} {...props} />\n        ) : (\n          render(props)\n        );\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"#fff\",\n    margin: \"0 auto\",\n    width: \"100%\",\n    height: \"10rem\",\n  },\n  appBar: {\n    background: \"none\",\n  },\n  backIcon: {\n    color: \"#1DA1F2\",\n  },\n  title: {\n    color: \"black\",\n    fontWeight: \"600\",\n  },\n}));\n\nconst ProfileHeader = (props) => {\n  const classes = useStyles(props);\n  const goBackHome = () => {\n    props.history.push(\"/home\");\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Button className={classes.backIcon} onClick={goBackHome}>\n            <ArrowBackIcon />\n          </Button>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Xinyu Tang(Anna)\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nProfileHeader.propTypes = {};\n\nexport default ProfileHeader;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// MUI Stuff\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport AvatarImage from \"./AvatarImage\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { connect } from \"react-redux\";\nimport { apiPutUserBegan } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    fontSize: \"0.8rem\",\n    color: \"red\",\n    textAlign: \"center\",\n  },\n}));\n\nconst EditProfile = (props) => {\n  const classes = useStyles(props);\n  //open and close edit profile button\n  const { open, handleClose } = props;\n\n  const [bio, setBio] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n\n  const [bioError, setBioError] = useState(\"\");\n  const [locationError, setLocationError] = useState(\"\");\n  const [websiteError, setWebsiteError] = useState(\"\");\n\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    const { bio, location, website } = props.user;\n    setBio(bio);\n    setLocation(location);\n    setWebsite(website);\n  }, [props.user]);\n\n  const handleServer = () => {\n    const userData = {\n      bio,\n      location,\n      website,\n    };\n    props.update(\"./api/users/details\", userData, handleClose);\n    //error check\n  };\n\n  const handleLogInSubmit = (event) => {\n    event.preventDefault();\n    handleServer();\n  };\n\n  const validHandler = (value, name) => {\n    if (name === \"website\") {\n      return value.length >= 5 && value.length <= 50\n        ? \"\"\n        : \"length should be longer than 5 smaller than 50\";\n    } else if (name === \"bio\") {\n      return value.length >= 5 && value.length <= 200\n        ? \"\"\n        : \"length should be longer than 5 smaller than 200\";\n    } else {\n      return value.length >= 5 && value.length <= 30\n        ? \"\"\n        : \"length should be longer than 5 smaller than 30\";\n    }\n  };\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const message = validHandler(event.target.value, event.target.name);\n\n    if (name === \"bio\") {\n      setBio(event.target.value);\n      setBioError(message);\n    } else if (name === \"location\") {\n      setLocation(event.target.value);\n      setLocationError(message);\n    } else {\n      setWebsite(event.target.value);\n      setWebsiteError(message);\n    }\n\n    if (!message) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Edit Profile</DialogTitle>\n\n      <AvatarImage isTweet={false}/>\n      {props.errors && (\n        <Typography variant=\"body2\" className={classes.errorMessage}>\n          {props.errors}\n        </Typography>\n      )}\n\n      <DialogContent>\n        <TextField\n          id=\"bio\"\n          name=\"bio\"\n          type=\"bio\"\n          label=\"bio\"\n          value={bio}\n          onChange={handleChange}\n          helperText={bioError}\n          error={bioError ? true : false}\n          fullWidth\n        />\n        <TextField\n          id=\"location\"\n          name=\"location\"\n          type=\"location\"\n          label=\"location\"\n          value={location}\n          onChange={handleChange}\n          helperText={locationError}\n          error={locationError ? true : false}\n          fullWidth\n        />\n        <TextField\n          id=\"website\"\n          name=\"website\"\n          type=\"website\"\n          label=\"website\"\n          value={website}\n          onChange={handleChange}\n          helperText={websiteError}\n          error={websiteError ? true : false}\n          fullWidth\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleLogInSubmit} color=\"primary\" disabled={disabled}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nEditProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n  update: PropTypes.func.isRequired,\n  errors: PropTypes.string.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  errors: state.user.update_error,\n});\n\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    update: (url, userData, handle) =>\n      dispatch(apiPutUserBegan({ url, userData, handle })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps, mapActionsToProps)(EditProfile);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport EditProfile from \"./EditProfile\";\nimport { withRouter } from \"react-router\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport LinkOffOutlinedIcon from \"@material-ui/icons/LinkOffOutlined\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MuiLink from \"@material-ui/core/Link\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n//redux\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: \"3rem\",\n  },\n  media: {\n    height: 160,\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  profileInfo: {\n    textAlign: \"start\",\n    paddingTop: \"3rem\",\n  },\n  notes: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingTop: \"1em\",\n  },\n  note: {\n    padding: \"0 1rem\",\n  },\n  button: {\n    position: \"absolute\",\n    right: 0,\n    margin: \"1em\",\n  },\n});\nconst ProfileCard = (props) => {\n  const classes = useStyles(props);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let paper;\n  if (!props.user) {\n    paper = <CircularProgress />;\n  } else {\n    const {\n      _id,\n      handle,\n      bio,\n      website,\n      location,\n      createdAt,\n      following,\n      followedBy,\n    } = props.user;\n\n    paper = (\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image=\"/image/twitterLogo.jpg\"\n            title=\"background\"\n          />\n\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleOpen}\n          >\n            Edit Profile\n          </Button>\n\n          <CardContent className={classes.profileInfo}>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\n              {handle}\n            </Typography>\n\n            <MuiLink component={Link} to={`/profile`} color=\"textPrimary\">\n              @{handle}\n            </MuiLink>\n\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {bio}\n            </Typography>\n\n            <Typography className={classes.notes}>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <LocationOnOutlinedIcon />\n                {location}\n              </Typography>\n\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <LinkOffOutlinedIcon />\n                {website}\n              </Typography>\n\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <DateRangeIcon />\n                {createdAt ? createdAt.split(\"T\")[0] : \"\"}\n              </Typography>\n            </Typography>\n\n            <Typography className={classes.notes}>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className={classes.note}\n              >\n                {following ? following.length : \"\"} Followings\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className={classes.note}\n              >\n                {followedBy ? followedBy.length : \"\"} Followers\n              </Typography>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className={classes.buttons}>\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={() => {\n              props.history.push(props.match.url + \"/mytweet\");\n            }}\n          >\n            Tweets\n          </Link>\n\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={() => {\n              props.history.push(props.match.url + \"/mycomment\");\n            }}\n          >\n            Tweets & replies\n          </Link>\n\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={() => {\n              props.history.push(props.match.url + \"/mylike\");\n            }}\n          >\n            Likes\n          </Link>\n        </CardActions>\n\n        <EditProfile open={open} handleClose={handleClose} />\n      </Card>\n    );\n  }\n\n  return <div className={classes.root}>{paper}</div>;\n};\n\nProfileCard.propTypes = {\n  fetch_errors: PropTypes.string.isRequired,\n};\n\n//state from the store, and properties of this object become our props\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  fetch_errors: state.user.fetch_errors,\n});\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(mapStateToProps)(withRouter(ProfileCard));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AvatarImage from \"./AvatarImage\";\nimport Button from \"@material-ui/core/Button\";\nimport EditLocationOutlinedIcon from \"@material-ui/icons/EditLocationOutlined\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { apiPutUserBegan } from \"../store/actions\";\n\nconst useStyles = makeStyles({\n  editImage: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  icon: {\n    position: \"absolute\",\n  },\n  popover: {\n    pointerEvents: \"none\",\n  },\n});\n\nconst EditImage = (props) => {\n  const classes = useStyles(props);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const openPop = Boolean(anchorEl);\n\n  //handle image\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  //handle picture\n  const handleEditPicture = () => {\n    const fileInput = document.getElementById(\"profileImage\");\n    fileInput.click();\n  };\n\n  const handleImageChange = (event) => {\n    const formData = new FormData();\n\n    formData.append(\"profileImage\", event.target.files[0]);\n    props.update(\"./api/users/image\", formData);\n  };\n  return (\n    <div className={classes.editImage}>\n      <AvatarImage isTweet={false}/>\n      <div>\n        <Button className={classes.icon}>\n          <input\n            type=\"file\"\n            id=\"profileImage\"\n            hidden=\"hidden\"\n            onChange={handleImageChange}\n          />\n        </Button>\n\n        <Button\n          tip=\"Edit profile picture\"\n          onClick={handleEditPicture}\n          btnClassName=\"button\"\n          className=\"editIcon\"\n          aria-owns={openPop ? \"mouse-over-popover\" : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n        >\n          <EditLocationOutlinedIcon />\n        </Button>\n      </div>\n\n      <div>\n        <Popover\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          open={openPop}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={handlePopoverClose}\n          disableRestoreFocus\n        >\n          <Typography>Edit Image (within 1024*1024 jpg/png).</Typography>\n        </Popover>\n      </div>\n    </div>\n  );\n};\n\nEditImage.propTypes = {\n  update: PropTypes.func.isRequired,\n};\n\n//takes dispatch from the store and dispatch an action\nconst mapActionsToProps = (dispatch) => {\n  return {\n    update: (url, userData) => dispatch(apiPutUserBegan({ url, userData })),\n  };\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default connect(null, mapActionsToProps)(EditImage);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Scream from \"../Post/Scream\";\n// REdux\nimport { connect } from \"react-redux\";\n\n//materialUI\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n\n    maxWidth: 512,\n    margin: \"0 auto\",\n    marginTop: \"300px\",\n  },\n  wrapper: {\n    margin: \"1rem 0\",\n    borderLeft: \"3px solid #1DA1F2\",\n  },\n});\n\nconst MyTweet = (props) => {\n  const classes = useStyles(props);\n\n  const getScream = (scream, id) => {\n    console.log(\"getScream is \", scream);\n    if (scream.commentOn) {\n      const commented_id = scream.commentOn;\n\n      const commentedScream = props.screams.find(\n        (scream) => scream._id === commented_id\n      );\n\n      return (\n        <div className={classes.wrapper}>\n          {scream.body.startsWith(\"retweet\") ? (\n            <Scream key={id + \"Scream\"} scream={scream} isComment={false} />\n          ) : (\n            <div>\n              <Scream key={id + \"commentedScream\"} scream={commentedScream} />\n              <Scream\n                key={id + \"commentingScream\"}\n                scream={scream}\n                isComment={true}\n              />{\" \"}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      console.log(\"passing scream, not comment, not tweet is \", scream);\n      return <Scream key={id + \"scream\"} scream={scream} isComment={false} />;\n    }\n  };\n\n  let paper;\n  if (!props.screams) {\n    paper = <CircularProgress />;\n  } else {\n    const personal_posts = props.screams.filter(\n      (post) => post.author === props.user._id\n    );\n\n    paper = personal_posts.map((scream, id) => getScream(scream, id));\n  }\n\n  return <div className={classes.root}>{paper}</div>;\n};\n\nMyTweet.propTypes = {\n  screams: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  screams: state.data.screams,\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps)(MyTweet);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Scream from \"../Post/Scream\";\n// REdux\nimport { connect } from \"react-redux\";\n\n//materialUI\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n\n    maxWidth: 512,\n    margin: \"0 auto\",\n    marginTop: \"300px\",\n  },\n  wrapper: {\n    margin: \"1rem 0\",\n    borderLeft: \"3px solid #1DA1F2\",\n  },\n});\n\nconst MyLike = (props) => {\n  const classes = useStyles(props);\n\n  const getScream = (scream, id) => {\n    if (scream.commentOn) {\n      const commented_id = scream.commentOn;\n\n      const commentedScream = props.screams.find(\n        (scream) => scream._id === commented_id\n      );\n\n      return (\n        <div className={classes.wrapper}>\n          {scream.body.startsWith(\"retweet\") ? (\n            <Scream key={id + \"Scream\"} scream={scream} isComment={false} />\n          ) : (\n            <div>\n              <Scream key={id + \"commentedScream\"} scream={commentedScream} />\n              <Scream\n                key={id + \"commentingScream\"}\n                scream={scream}\n                isComment={true}\n              />{\" \"}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      console.log(\"passing scream, not comment, not tweet is \", scream);\n      return <Scream key={id + \"scream\"} scream={scream} isComment={false} />;\n    }\n  };\n\n  let paper;\n  if (!props.screams) {\n    paper = <CircularProgress />;\n  } else {\n    let likes = [];\n    props.user.like.forEach((element) => {\n      likes.push(element._id);\n    });\n\n    const liked_posts = props.screams.filter((post) =>\n      likes.includes(post._id)\n    );\n    paper = liked_posts.map((scream, id) => getScream(scream, id));\n  }\n\n  return <div className={classes.root}>{paper}</div>;\n};\n\nMyLike.propTypes = {\n  screams: PropTypes.array.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  screams: state.data.screams,\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps)(MyLike);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Scream from \"../Post/Scream\";\n// REdux\nimport { connect } from \"react-redux\";\n\n//materialUI\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n\n    maxWidth: 512,\n    margin: \"0 auto\",\n    marginTop: \"300px\",\n  },\n  wrapper: {\n    margin: \"1rem 0\",\n    borderLeft: \"3px solid #1DA1F2\",\n  },\n});\n\nconst MyComment = (props) => {\n  const classes = useStyles(props);\n\n  const getScream = (scream, id) => {\n    console.log(\"getScream is \", scream);\n    if (scream.commentOn) {\n      const commented_id = scream.commentOn;\n\n      const commentedScream = props.screams.find(\n        (scream) => scream._id === commented_id\n      );\n\n      return (\n        <div className={classes.wrapper}>\n          {scream.body.startsWith(\"retweet\") ? (\n            <Scream key={id + \"Scream\"} scream={scream} isComment={false} />\n          ) : (\n            <div>\n              <Scream key={id + \"commentedScream\"} scream={commentedScream} />\n              <Scream\n                key={id + \"commentingScream\"}\n                scream={scream}\n                isComment={true}\n              />{\" \"}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  let paper;\n  if (!props.screams) {\n    paper = <CircularProgress />;\n  } else {\n    const personal_posts = props.screams.filter(\n      (post) => post.author === props.user._id\n    );\n\n    paper = personal_posts.map((scream, id) => getScream(scream, id));\n  }\n\n  return <div className={classes.root}>{paper}</div>;\n};\n\nMyComment.propTypes = {\n  screams: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  screams: state.data.screams,\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps)(MyComment);\n","import React, { useState } from \"react\";\nimport ProfileHeader from \"../../component/ProfileHeader\";\nimport ProfileCard from \"../../component/ProfileCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport PostCard from \"../../component/PostCard\";\nimport EditImage from \"../../component/EditImage\";\nimport MyTweet from \"./MyTweet\";\nimport { Route } from \"react-router-dom\";\nimport MyLike from \"./MyLike\";\nimport MyComment from \"./MyComment\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n\n  addIcon: {\n    position: \"fixed\",\n    color: \"#1DA1F2\",\n\n    bottom: \"3rem\",\n    right: \"3rem\",\n  },\n  editImage: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  icon: {\n    position: \"absolute\",\n  },\n  popover: {\n    pointerEvents: \"none\",\n  },\n});\n\nconst Profile = (props) => {\n  const classes = useStyles(props);\n  //open for new tweet\n  const [open, setOpen] = useState(false);\n\n  //handle new tweet\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ProfileHeader {...props} />\n      <ProfileCard />\n      <EditImage />\n      <Fab\n        color=\"primary\"\n        size=\"medium\"\n        className={classes.addIcon}\n        onClick={handleClickOpen}\n      >\n        <AddCircleOutlineIcon fontSize=\"large\" />\n      </Fab>\n\n      <Route path={\"/profile/mytweet\"} component={MyTweet} />\n      <Route path={\"/profile/mycomment\"} component={MyComment} />\n      <Route path={\"/profile/mylike\"} component={MyLike} />\n\n      <PostCard open={open} handleClose={handleClose} {...props} />\n    </div>\n  );\n};\n\n//connect subscribe/unsubscribe the redux store\nexport default Profile;\n","import * as actions from \"../actions\";\nimport { setAuthorizationHeader, removeAuthorizationHeader } from \"../helpers\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  errors: \"\",\n  user: \"\",\n  fetching_errors: \"\",\n  update_error: \"\",\n  image_loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    //LogIn SignUp\n    case actions.apiCallBegan.type:\n      console.log(\"user submit/login siginUp form\");\n      return {\n        ...state,\n\n        errors: \"\",\n      };\n\n    case actions.apiCallSuccess.type:\n      console.log(\"siginUp/login successfully \");\n      setAuthorizationHeader(action.payload); //payload is token\n\n      return {\n        ...state,\n\n        authenticated: true,\n      };\n\n    case actions.apiCallFailed.type:\n      console.log(\"siginUp/login failed : \", action.payload);\n      return {\n        ...state,\n\n        errors: action.payload,\n      };\n\n    case actions.logoutUser.type:\n      console.log(\"logging out user\");\n      removeAuthorizationHeader();\n      window.location.replace(\"/auth\");\n\n      return {\n        ...state,\n        authenticated: false,\n      };\n\n    //Get Users\n\n    case actions.apiGetUserBegan.type:\n      console.log(\"user start fetching data\");\n      return {\n        ...state,\n\n        fetching_errors: \"\",\n      };\n\n    case actions.apiGetUserSuccess.type:\n      console.log(\"user data successfully fetched as\", action.payload);\n\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n\n    case actions.apiGetUserFailed.type:\n      console.log(\"user data failed and error is : \", action.payload);\n      return {\n        ...state,\n\n        fetching_errors: action.payload,\n      };\n    //put request\n\n    case actions.apiPutUserBegan.type:\n      // console.log(\"user start updating data\");\n      return {\n        ...state,\n        image_loading: true,\n        update_error: \"\",\n      };\n\n    case actions.apiPutUserSuccess.type:\n      // console.log(\"user data successfully updated as\", action.payload);\n\n      return {\n        ...state,\n        user: action.payload.user,\n        image_loading: false,\n      };\n\n    case actions.apiPutUserFailed.type:\n      // console.log(\"user data updated failed and error is : \", action.payload);\n      return {\n        ...state,\n        image_loading: false,\n        update_error: action.payload,\n      };\n\n    case actions.apiPutLikeBegan.type:\n      console.log(\"user start like a post\");\n      return {\n        ...state,\n      };\n\n    case actions.apiPutLikeSuccess.type:\n      console.log(\n        \"user successfully liked and updated as\",\n        action.payload.updated\n      );\n\n      return {\n        ...state,\n        user: action.payload.updated,\n      };\n\n    case actions.apiPutLikeFailed.type:\n      console.log(\"apiPutLikeFailed  \");\n      return {\n        ...state,\n      };\n\n    case actions.apiPutUnLikeBegan.type:\n      console.log(\"user start unlike a post\");\n      return {\n        ...state,\n      };\n\n    case actions.apiPutUnLikeSuccess.type:\n      console.log(\n        \"user successfully unliked and updated as\",\n        action.payload.target\n      );\n\n      return {\n        ...state,\n        user: action.payload.target,\n      };\n\n    case actions.apiPutUnLikeFailed.type:\n      console.log(\"apiPutUnLikeFailed  \");\n      return {\n        ...state,\n      };\n\n    case actions.apiPutUnFollowBegan.type:\n    case actions.apiPutFollowBegan.type:\n      console.log(\"apiPutFollowBegan\");\n      return {\n        ...state,\n      };\n\n    case actions.apiPutUnFollowSuccess.type:\n    case actions.apiPutFollowSuccess.type:\n      console.log(\"apiPutFollowSuccess\", action.payload.message);\n\n      return {\n        ...state,\n      };\n\n    case actions.apiPutUnFollowFailed.type:\n    case actions.apiPutFollowFailed.type:\n      console.log(\"apiPutFollowFailed \");\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import * as actions from \"../actions\";\nimport { setCommentHeader } from \"../helpers\";\n\nconst initialState = {\n  screams: \"\",\n  errors: \"\",\n  post_errors: \"\",\n  delete_loading: false,\n  post: \"\",\n  post_error: \"\",\n  post_loading: false,\n  totalComment: 0,\n  totalRetweet: 0,\n  unComment_error: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.apiGetScreamBegan.type:\n      console.log(\"start fetching scream data\");\n      return {\n        ...state,\n        errors: \"\",\n      };\n\n    case actions.apiGetScreamSuccess.type:\n      console.log(\"screams successfully fetched as\", action.payload.screams);\n\n      return {\n        ...state,\n        screams: action.payload.screams,\n      };\n\n    case actions.apiGetScreamFailed.type:\n      console.log(\"apiGetScreamFailed : \", action.payload);\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case actions.apiGetOneScreamBegan.type:\n      console.log(\"start fetching ONE scream data\");\n      return {\n        ...state,\n        post_error: \"\",\n        post_loading: true,\n      };\n\n    case actions.apiGetOneScreamSuccess.type:\n      console.log(\"ONE scream successfully fetched as\", action.payload.scream);\n\n      return {\n        ...state,\n        post: action.payload.scream[0],\n        post_loading: false,\n      };\n\n    case actions.apiGetOneScreamFailed.type:\n      console.log(\"aapiGetOneScreamFailed : \", action.payload);\n      return {\n        ...state,\n        post_error: action.payload,\n        post_loading: false,\n      };\n\n    case actions.apiPostScreamBegan.type:\n      console.log(\"start post scream data\");\n      return {\n        ...state,\n        post_errors: \"\",\n      };\n\n    case actions.apiPostScreamSuccess.type:\n      console.log(\"screams successfully posted as\", action.payload.scream);\n      const scream = action.payload.scream;\n      scream.likeCount = 0;\n      return {\n        ...state,\n        screams: [scream, ...state.screams],\n      };\n\n    case actions.apiPostScreamFailed.type:\n      console.log(\"apiPostScreamFailed : \", action.payload);\n      return {\n        ...state,\n        post_errors: action.payload,\n      };\n\n    case actions.apiDeleteBegan.type:\n      console.log(\"start delete scream data\");\n      return {\n        ...state,\n        delete_loading: true,\n      };\n\n    case actions.apiDeleteSuccess.type:\n      console.log(\"  deleted screamId is..\", action.payload.ids);\n\n      action.payload.ids.forEach((id) => {\n        const i = state.screams.findIndex((scream) => scream._id === id);\n        state.screams.splice(i, 1);\n      });\n\n      return {\n        ...state,\n        screams: [...state.screams],\n        delete_loading: false,\n      };\n\n    case actions.apiDeleteFailed.type:\n      console.log(\"apiDeleteFailed: \", action.payload);\n      return {\n        ...state,\n        delete_loading: false,\n      };\n\n    case actions.apiUncommentBegan.type:\n      console.log(\"apiUncommentBegan\");\n      return {\n        ...state,\n        unComment_error: \"\",\n      };\n\n    case actions.apiUncommentSuccess.type:\n      console.log(\n        \" apiUncommentSuccess and  uncommented is..\",\n        action.payload.target\n      );\n\n      return {\n        ...state,\n        totalComment: state.totalComment - 1,\n      };\n\n    case actions.apiUncommentFailed.type:\n      console.log(\"apiUncommentFailed: \", action.payload);\n      return {\n        ...state,\n        unComment_error: action.payload,\n      };\n\n    case actions.apiPostCommentBegan.type:\n      console.log(\"start post comment data\");\n      return {\n        ...state,\n        errors: \"\",\n      };\n\n    case actions.apiPostCommentSuccess.type:\n      console.log(\"comment successfully posted as\", action.payload.scream);\n      setCommentHeader(action.payload.scream._id);\n\n      return {\n        ...state,\n      };\n\n    case actions.apiPostCommentFailed.type:\n      console.log(\"apiPostCommentFailed : \", action.payload);\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case actions.apiPutCommentBegan.type:\n      console.log(\"start put comment data\");\n      return {\n        ...state,\n        errors: \"\",\n      };\n\n    case actions.apiPutCommentSuccess.type:\n      console.log(\"comment successfully put as\", action.payload.comment);\n\n      return {\n        ...state,\n        totalComment: state.totalComment + 1,\n        screams: [action.payload.comment, ...state.screams],\n      };\n\n    case actions.apiPutCommentFailed.type:\n      console.log(\"apiPutCommentFailed : \", action.payload);\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case actions.apiPutRetweetBegan.type:\n      console.log(\"start put Retweet data\");\n      return {\n        ...state,\n        errors: \"\",\n      };\n\n    case actions.apiPutRetweetSuccess.type:\n      console.log(\"Retweet successfully put as\", action.payload.retweet);\n\n      return {\n        ...state,\n        totalRetweet: state.totalRetweet + 1,\n        screams: [action.payload.retweet, ...state.screams],\n      };\n\n    case actions.apiPutRetweetFailed.type:\n      console.log(\"apiPutRetweetFailed : \", action.payload);\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { post_api } from \"./middleware/postapi\";\nimport { post_detail_api } from \"./middleware/postDetailApi\";\nimport { get_api } from \"./middleware/getapi\";\nimport { put_api } from \"./middleware/putapi\";\n\nimport userReducer from \"./reducers/userReducer\";\nimport dataReducer from \"./reducers/dataReducer\";\n\nconst middleware = [thunk, post_api, get_api, put_api, post_detail_api];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n});\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, enhancer);\n\nexport default store;\n","import http from \"../httpService\";\nimport * as actions from \"../actions\";\nimport { getCurrentUser } from \"../helpers\";\n\nexport const post_api = ({ dispatch, getState }) => (next) => (action) => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n\n  next(action);\n\n  const { url, userData, history } = action.payload;\n\n  http\n    .post(`${url}`, userData, history)\n    .then((res) => {\n      dispatch(actions.apiCallSuccess(res.data.token));\n      history.push(\"/home\");\n\n      const currentUser = getCurrentUser();\n\n      dispatch(\n        actions.apiGetUserBegan({ url: `./api/users/${currentUser._id}` })\n      );\n      // dispatch(actions.apiGetScreamBegan({ url: `./api/screams` }));\n    })\n    .catch((error) => {\n      dispatch(actions.apiCallFailed(error.response.data.message));\n    });\n};\n","import http from \"../httpService\";\nimport * as actions from \"../actions\";\n\nexport const get_api = ({ dispatch }) => (next) => (action) => {\n  if (\n    action.type !== actions.apiGetUserBegan.type &&\n    action.type !== actions.apiGetScreamBegan.type &&\n    action.type !== actions.apiGetOneScreamBegan.type\n  )\n    return next(action);\n  next(action);\n\n  if (action.type === actions.apiGetScreamBegan.type) {\n    const { url } = action.payload;\n    http\n      .get(`${url}`)\n      .then((res) => dispatch(actions.apiGetScreamSuccess(res.data)))\n      .catch((error) => {\n        console.log(error);\n\n        dispatch(actions.apiGetScreamFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiGetUserBegan.type) {\n    const { url } = action.payload;\n    http\n      .get(`${url}`)\n      .then((res) => dispatch(actions.apiGetUserSuccess(res.data)))\n      .catch((error) => {\n        dispatch(actions.apiGetUserFailed(error.response.data.message));\n      });\n  } else {\n    const { url } = action.payload;\n    console.log(\"apiGetOneScreamBegan url\", url);\n    http\n      .get(`${url}`)\n      .then((res) => dispatch(actions.apiGetOneScreamSuccess(res.data)))\n      .catch((error) => {\n        dispatch(actions.apiGetOneScreamFailed(error.response.data.message));\n      });\n  }\n};\n","import http from \"../httpService\";\nimport * as actions from \"../actions\";\nimport { getCurrentUser, removeCommentHeader } from \"../helpers\";\n\nexport const put_api = ({ dispatch, getState }) => (next) => (action) => {\n  if (\n    action.type !== actions.apiPutUserBegan.type &&\n    action.type !== actions.apiPutCommentBegan.type &&\n    action.type !== actions.apiPutRetweetBegan.type &&\n    action.type !== actions.apiDeleteBegan.type &&\n    action.type !== actions.apiUncommentBegan.type &&\n    action.type !== actions.apiPutLikeBegan.type &&\n    action.type !== actions.apiPutUnLikeBegan.type &&\n    action.type !== actions.apiPutUnFollowBegan.type &&\n    action.type !== actions.apiPutFollowBegan.type\n  )\n    return next(action);\n\n  next(action);\n\n  if (action.type === actions.apiPutUserBegan.type) {\n    const { url, userData, handle } = action.payload;\n    http\n      .put(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiPutUserSuccess(res.data));\n        if (handle) {\n          handle();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(actions.apiPutUserFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutCommentBegan.type) {\n    const { url, userData } = action.payload;\n    http\n      .put(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiPutCommentSuccess(res.data));\n        removeCommentHeader();\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(actions.apiPutCommentFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutRetweetBegan.type) {\n    const { url, userData } = action.payload;\n    http\n      .put(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiPutRetweetSuccess(res.data));\n        removeCommentHeader();\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(actions.apiPutRetweetFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiUncommentBegan.type) {\n    const { url, userData } = action.payload;\n    console.log(\"actions.apiUncommentBegan url is\", url);\n    console.log(\"actions.apiUncommentBegan userData is\", userData);\n    http\n      .put(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiUncommentSuccess(res.data));\n      })\n      .catch((error) => {\n        dispatch(actions.apiUncommentFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutLikeBegan.type) {\n    const { url } = action.payload;\n    http\n      .put(`${url}`)\n      .then((res) => {\n        dispatch(actions.apiPutLikeSuccess(res.data));\n      })\n      .catch((error) => {\n        dispatch(actions.apiPutLikeFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutUnLikeBegan.type) {\n    const { url } = action.payload;\n    http\n      .put(`${url}`)\n      .then((res) => {\n        dispatch(actions.apiPutUnLikeSuccess(res.data));\n      })\n      .catch((error) => {\n        dispatch(actions.apiPutUnLikeFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutUnFollowBegan.type) {\n    const { url } = action.payload;\n\n    const currentUser = getCurrentUser();\n\n    http\n      .put(`${url}`)\n      .then((res) => {\n        dispatch(actions.apiPutUnFollowSuccess(res.data));\n        dispatch(\n          actions.apiGetUserBegan({ url: `./api/users/${currentUser._id}` })\n        );\n      })\n      .catch((error) => {\n        dispatch(actions.apiPutUnFollowFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPutFollowBegan.type) {\n    const { url } = action.payload;\n    const currentUser = getCurrentUser();\n    http\n      .put(`${url}`)\n      .then((res) => {\n        dispatch(actions.apiPutFollowSuccess(res.data));\n        dispatch(\n          actions.apiGetUserBegan({ url: `./api/users/${currentUser._id}` })\n        );\n      })\n      .catch((error) => {\n        dispatch(actions.apiPutFollowFailed(error.response.data.message));\n      });\n  } else {\n    const { url, data, history } = action.payload;\n\n    http\n      .put(`${url}`, data)\n      .then((res) => {\n        dispatch(actions.apiDeleteSuccess({ ids: data.ids }));\n        history.push(\"/home\");\n      })\n      .catch((error) => {\n        dispatch(actions.apiDeleteFailed(error.response.data.message));\n      });\n  }\n};\n","import http from \"../httpService\";\nimport * as actions from \"../actions\";\n\nexport const post_detail_api = ({ dispatch, getState }) => (next) => (\n  action\n) => {\n  if (\n    action.type !== actions.apiPostScreamBegan.type &&\n    action.type !== actions.apiPostCommentBegan.type\n  )\n    return next(action);\n\n  next(action);\n\n  if (action.type === actions.apiPostScreamBegan.type) {\n    const { url, userData, handle } = action.payload;\n\n    http\n      .post(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiPostScreamSuccess(res.data));\n        if (handle) {\n          handle();\n        }\n      })\n      .catch((error) => {\n        dispatch(actions.apiPostScreamFailed(error.response.data.message));\n      });\n  } else if (action.type === actions.apiPostCommentBegan.type) {\n    const { url, userData } = action.payload;\n\n    http\n      .post(`${url}`, userData)\n      .then((res) => {\n        dispatch(actions.apiPostCommentSuccess(res.data));\n      })\n      .catch((error) => {\n        dispatch(actions.apiPostCommentFailed(error.response.data.message));\n      });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Auth from \"./Page/Auth/Auth\";\nimport Home from \"./Page/Home/Home\";\nimport NotFound from \"./Page/NotFound\";\nimport ProtectedRoute from \"./component/common/protectedRoute\";\nimport { getCurrentUser } from \"./store/helpers\";\nimport Profile from \"./Page/Profile/Profile\";\nimport MyTweet from \"./Page/Profile/MyTweet\";\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport {\n  logoutUser,\n  apiCallSuccess,\n  apiGetUserBegan,\n  apiGetScreamBegan,\n} from \"./store/actions\";\nimport { checkExpiration } from \"./store/helpers\";\n\nfunction App() {\n  useEffect(() => {\n    const token = localStorage.getItem(\"IdToken\");\n    if (token) {\n      const currentUser = getCurrentUser();\n      if (checkExpiration()) return store.dispatch(logoutUser());\n      //still login in ....\n      store.dispatch(apiCallSuccess(token));\n      store.dispatch(apiGetUserBegan({ url: `/api/users/${currentUser._id}` }));\n      // store.dispatch(apiGetScreamBegan({ url: `./api/screams` }));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Switch>\n            <ProtectedRoute path=\"/home\" exact={true} component={Home} />\n            <Route path=\"/auth\" exact={true} component={Auth} />\n            <Route path=\"/\" exact={true}>\n              <Redirect to=\"/auth\" />\n            </Route>\n            <ProtectedRoute path=\"/profile\" component={Profile} />\n            <Route path=\"/\" component={NotFound} />\n          </Switch>\n        </div>\n      </Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: \"none\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}